p<-rnorm(1)
p
?rnorm
dnorm(1)
dnorm(1)
dnorm(1)
dnorm(1)
rnorm(1)
rnorm(1)
rnorm(1)
rnorm(1)
rnorm(1)
rnorm(1)
rnorm(1)
rnorm(1)
pnorm(1)
pnorm(1)
pnorm(1)
pnorm(rnorm(1))
pnorm(rnorm(1))
pnorm(rnorm(1))
pnorm(rnorm(1))
pnorm(rnorm(1))
pnorm(rnorm(1))
pnorm(rnorm(1))
pnorm(rnorm(1))
hist(rnorm(100))
hist(pnorm(rnorm(100)))
hist(pnorm(rnorm(100)))
hist(pnorm(rnorm(100)))
hist(pnorm(rnorm(100)))
hist(qnorm(rnorm(100)))
hist(dnorm(rnorm(100)))
hist(rnorm(1000))
hist(dnorm(rnorm(1000)))
hist(dnorm(rnorm(1000)))
hist(dnorm(rnorm(1000)))
pnorm(1.96)
pnorm(-1)
pnorm(-1.96)
pnorm(-0.96)
pnorm(-1.25)
pnorm(-0.99)
pnorm(-0.95)
pnorm(-1.2)
pnorm(-1.1)
pnorm(-1.09)
qnorm(0.13)
qnorm(0.13+0.61)
x<-sample(1:14,100)
x<-sample(1:14,100,replace=T)
x
hist(x)
mean(x)
age_bias<-function(age){
if(age>1){
p<-rnorm(1)
if(p<=qnorm(0.13)) {age <- age-1}
if(p>=qnorm(0.74)) {age <- age+1}
}
return (age)
}
x2<-sapply(x,age_bias)
x2
mean(x2)
hist(x2)
hist(x,add=T,col="red")
plot(x2,x)
x<-sample(1:14,10000)
x2<-sapply(x,age_bias)
x<-sample(1:14,10000,replace=T)
x2<-sapply(x,age_bias)
mean(x)
mean(x2)
plot(x2,x)
age_bias<-function(age){
if(age>1&age<8){
p<-rnorm(1)
if(p<=qnorm(0.13)) {age <- age-1}
if(p>=qnorm(0.74)) {age <- age+1}
}
return (age)
}
x<-sample(1:14,10000,replace=T)
x2<-sapply(x,age_bias)
plot(x2,x)
mean(x)
mean(x2)
Sys.setenv(PATH=paste0(Sys.getenv("PATH"),";C:\Rtools\bin\"))
Sys.setenv(PATH=paste0(Sys.getenv("PATH"),":C:\Rtools\bin\"))
Sys.setenv(PATH=paste0(Sys.getenv("PATH"),";C:\Rtools\bin\"))
library(shiny)
shinyapp()
load("C:/SHINY/nwfsc_landingstracker/comp_dat_covidapp.RDS")
runApp('C:/SHINY/nwfsc_landingstracker')
install.packages("devtools")
library(devtools)
install.packages("INLA", repos=c(getOption("repos"),
INLA="https://inla.r-inla-download.org/R/testing"), dep=TRUE)
library(rmarkdown)
knitr::opts_chunk$set(echo = TRUE,cache=FALSE)
library(shiny)
library(odbc)
DBI::dbConnect(odbc::odbc(), "akfin",
UID = 'sbarbeaux', PWD = '$tockmen12')
library(DBI)
con <- DBI::dbConnect(odbc::odbc(), "akfin",UID='sbarbeaux',PWD='$tockmen12')
library(devtools)
packageVersion("devtools")
devtools::install_github("afsc-gap-products/akgfmaps", build_vignettes = TRUE)
browseVignettes('akgfmaps')
library(akgfmaps)
SEBS <- akgfmaps::get_base_layers(select.region = "bs.south", set.crs = "auto")
(SEBS_plot <- ggplot() +
geom_sf(data = SEBS$akland) +
geom_sf(data = SEBS$bathymetry) +
geom_sf(data = SEBS$survey.area, fill = NA) +
geom_sf(data = SEBS$graticule, color = "grey70", alpha = 0.5) +
coord_sf(xlim = SEBS$plot.boundary$x,
ylim = SEBS$plot.boundary$y) +
scale_x_continuous(name = "Longitude",
breaks = SEBS$lon.breaks) +
scale_y_continuous(name = "Latitude",
breaks = SEBS$lat.breaks) +
theme_bw())
SEBS_plot()
SEBS_plot
?akgfmaps
?make_idw_map
yfs2017
?yfs2017
yfs2017 <- akgfmaps::YFS2017
yfs2017
getwd()
setwd("C:/WORKING_FOLDER/EBS_PCOD")
dir()
data=read.csv("EBSCOD_SURVEY.csv")
yfs2017 <- akgfmaps::data
yfs2017 <- data
head(yfs2017)
cod2022<-cod[YEAR==2022]
library(data.table)
data<-data.table(data)
cod2022<-data[YEAR==2022]
head(cod2022)
cod2021<-data[YEAR==2021]
head(cod2021)
opt1 <- make_idw_map(x = cod2021, # Pass data as a data frame
region = "bs.all", # Predefined bs.all area
set.breaks = "jenks", # Gets Jenks breaks from classint::classIntervals()
in.crs = "+proj=longlat", # Set input coordinate reference system
out.crs = "EPSG:3338", # Set output coordinate reference system
grid.cell = c(20000, 20000), # 20x20km grid
key.title = "Pacific cod") # Include Pcod sole in the legend title
cod2021
yfs2017 <- akgfmaps::YFS2017
head(yfs2017)
cod2021F<-data.frame(cod2021)
cod2021F
yfs2017 <- akgfmaps::YFS2017
head(cod2021F)
opt1 <- make_idw_map(x = cod2021F, # Pass data as a data frame
region = "bs.all", # Predefined bs.all area
set.breaks = "jenks", # Gets Jenks breaks from classint::classIntervals()
in.crs = "+proj=longlat", # Set input coordinate reference system
out.crs = "EPSG:3338", # Set output coordinate reference system
grid.cell = c(20000, 20000), # 20x20km grid
key.title = "Pacific cod") # Include Pcod sole in the legend title
library(ggplot2)
ggplot(data=cod2021,aes(y=END_LATITUDE,x=END_LONGITUDE))+geom_point()
ggplot(data=yfs2017,aes(y=END_LATITUDE,x=END_LONGITUDE))+geom_point()
ggplot(data=yfs2017,aes(y=LATITUDE,x=LONGITUDE))+geom_point()
names(cod2021F)
names(cod2021F)[6]<-'LATITUDE'
names(cod2021F)[7]<-'LONGITUDE'
head(yfs2017)
opt1 <- make_idw_map(x = cod2021F, # Pass data as a data frame
region = "bs.all", # Predefined bs.all area
set.breaks = "jenks", # Gets Jenks breaks from classint::classIntervals()
in.crs = "+proj=longlat", # Set input coordinate reference system
out.crs = "EPSG:3338", # Set output coordinate reference system
grid.cell = c(20000, 20000), # 20x20km grid
key.title = "Pacific cod") # Include Pcod sole in the legend title
coordinates(yfs2017)
akgfmaps::YFS2017
class(YFS2017)
coordinates(YFS2017)
opt1 <- make_idw_map(x = yfs2017, # Pass data as a data frame
region = "bs.all", # Predefined bs.all area
set.breaks = "jenks", # Gets Jenks breaks from classint::classIntervals()
in.crs = "+proj=longlat", # Set input coordinate reference system
out.crs = "EPSG:3338", # Set output coordinate reference system
grid.cell = c(20000, 20000), # 20x20km grid
key.title = "Pacific cod") # Include Pcod sole in the legend title
opt1
opt1 <- make_idw_map(x = cod2021F, # Pass data as a data frame
region = "bs.all", # Predefined bs.all area
set.breaks = "jenks", # Gets Jenks breaks from classint::classIntervals()
in.crs = "+proj=longlat", # Set input coordinate reference system
out.crs = "EPSG:3338", # Set output coordinate reference system
grid.cell = c(20000, 20000), # 20x20km grid
key.title = "Pacific cod") # Include Pcod sole in the legend title
head(cod2021F)<-head(yfs2017)
names(cod2021F)<-names(yfs2017)
opt1 <- make_idw_map(x = cod2021F, # Pass data as a data frame
region = "bs.all", # Predefined bs.all area
set.breaks = "jenks", # Gets Jenks breaks from classint::classIntervals()
in.crs = "+proj=longlat", # Set input coordinate reference system
out.crs = "EPSG:3338", # Set output coordinate reference system
grid.cell = c(20000, 20000), # 20x20km grid
key.title = "Pacific cod") # Include Pcod sole in the legend title
names(cod2021F)
cod2021F
data.table(cod2021F)
data.table(yfs2017)
names(cod2021F)[2:8]<-names(yfs2017)
names(cod2021F)[1]<-"SPECIES_CODE"
opt1 <- make_idw_map(x = cod2021F, # Pass data as a data frame
region = "bs.all", # Predefined bs.all area
set.breaks = "jenks", # Gets Jenks breaks from classint::classIntervals()
in.crs = "+proj=longlat", # Set input coordinate reference system
out.crs = "EPSG:3338", # Set output coordinate reference system
grid.cell = c(20000, 20000), # 20x20km grid
key.title = "Pacific cod") # Include Pcod sole in the legend title
opt1
opt1$plot
nbsdata<-read.csv("NBSCOD_SURVEY.csv")
data<-rbind(data,nbsdata)
data
data<-read.csv("EBSCOD_SURVEY.csv")
nbsdata<-read.csv("NBSCOD_SURVEY.csv")
data<-rbind(data,nbsdata)
names(data)[2:8]<-akgfmaps::YFS2017
names(data)[1]<- "SPECIES_CODE"
cod2021<-subset(data,YEAR==2021)
names(data)
data<-read.csv("EBSCOD_SURVEY.csv")
nbsdata<-read.csv("NBSCOD_SURVEY.csv")
data<-rbind(data,nbsdata)
names(data)[2:8]<-names(akgfmaps::YFS2017)
names(data)[1]<- "SPECIES_CODE"
cod2021<-subset(data,YEAR==2021)
cod2021
opt1 <- make_idw_map(x = cod2021, # Pass data as a data frame
region = "bs.all", # Predefined bs.all area
set.breaks = "jenks", # Gets Jenks breaks from classint::classIntervals()
in.crs = "+proj=longlat", # Set input coordinate reference system
out.crs = "EPSG:3338", # Set output coordinate reference system
grid.cell = c(20000, 20000), # 20x20km grid
key.title = "Pacific cod") # Include Pcod sole in the legend title
opt1$plot
opt1 <- make_idw_map(x = cod2021, # Pass data as a data frame
region = "bs.all", # Predefined bs.all area
set.breaks = "jenks", # Gets Jenks breaks from classint::classIntervals()
in.crs = "+proj=longlat", # Set input coordinate reference system
out.crs = "EPSG:3338", # Set output coordinate reference system
grid.cell = c(20000, 20000), # 20x20km grid
key.title = "Pacific cod") # Include Pcod sole in the legend title
opt1$plot
cod2019<-subset(data,YEAR==2019)
opt1 <- make_idw_map(x = cod2019, # Pass data as a data frame
region = "bs.all", # Predefined bs.all area
set.breaks = "jenks", # Gets Jenks breaks from classint::classIntervals()
in.crs = "+proj=longlat", # Set input coordinate reference system
out.crs = "EPSG:3338", # Set output coordinate reference system
grid.cell = c(20000, 20000), # 20x20km grid
key.title = "Pacific cod") # Include Pcod sole in the legend title
opt1$plot
opt1 <- make_idw_map(x = cod2019, # Pass data as a data frame
region = "bs.all", # Predefined bs.all area
set.breaks = "jenks", # Gets Jenks breaks from classint::classIntervals()
in.crs = "+proj=longlat", # Set input coordinate reference system
out.crs = "EPSG:3338", # Set output coordinate reference system
grid.cell = c(20000, 20000), # 20x20km grid
key.title = "Pacific cod 2019") # Include Pcod sole in the legend title
opt1$plot
getwd()
Years=c(2017,2019,2021)
for(i in 1:length(Years)){
cod<-subset(data,YEAR==Years[i])
pdf("NBS_COD.pdf",width=8, height=8)
opt1 <- make_idw_map(x = cod, # Pass data as a data frame
region = "bs.all", # Predefined bs.all area
set.breaks = "jenks", # Gets Jenks breaks from classint::classIntervals()
in.crs = "+proj=longlat", # Set input coordinate reference system
out.crs = "EPSG:3338", # Set output coordinate reference system
grid.cell = c(20000, 20000), # 20x20km grid
key.title = paste0("Pacific cod ",Years[i])) # Include Pcod sole in the legend title
print(opt1$plot)
}
dev.off()
dev.off()
dev.off()
dev.off()
Years=c(2010,2017,2019,2021)
pdf("NBS_COD.pdf",width=8, height=8)
for(i in 1:length(Years)){
cod<-subset(data,YEAR==Years[i])
opt1 <- make_idw_map(x = cod, # Pass data as a data frame
region = "bs.all", # Predefined bs.all area
set.breaks = "jenks", # Gets Jenks breaks from classint::classIntervals()
in.crs = "+proj=longlat", # Set input coordinate reference system
out.crs = "EPSG:3338", # Set output coordinate reference system
grid.cell = c(20000, 20000), # 20x20km grid
key.title = paste0("Pacific cod ",Years[i])) # Include Pcod sole in the legend title
print(opt1$plot)
}
dev.off()
i=3
Years=c(2010,2017,2018,2019,2021)
cod<-subset(data,YEAR==Years[i])
opt1 <- make_idw_map(x = cod, # Pass data as a data frame
region = "bs.all", # Predefined bs.all area
set.breaks = "jenks", # Gets Jenks breaks from classint::classIntervals()
in.crs = "+proj=longlat", # Set input coordinate reference system
out.crs = "EPSG:3338", # Set output coordinate reference system
grid.cell = c(20000, 20000), # 20x20km grid
key.title = paste0("Pacific cod ",Years[i])) # Include Pcod sole in the legend title
print(opt1$plot)
?make_idw_map
Years=c(2010:2019,2021)
pdf("EBS_COD.pdf",width=8, height=8)
for(i in 1:length(Years)){
cod<-subset(data,YEAR==Years[i])
opt1 <- make_idw_map(x = cod, # Pass data as a data frame
region = "bs.south", # Predefined bs.all area
set.breaks = "jenks", # Gets Jenks breaks from classint::classIntervals()
in.crs = "+proj=longlat", # Set input coordinate reference system
out.crs = "EPSG:3338", # Set output coordinate reference system
grid.cell = c(20000, 20000), # 20x20km grid
key.title = paste0("Pacific cod ",Years[i])) # Include Pcod sole in the legend title
print(opt1$plot)
}
dev.off()
4^4
4^3
4^4-4^3
4^4/4^3
4^4/4^3+4^2-4
4^4/4^3+4^2
4^4/4^3+4^3
68/4
4^4/4^3+4^3/4
(4^4/4^3+4^3)/4
256/64
64/16
64/8
4^3/(4+4)
4^3/(4+4)+4
4^4/(4*4)+4
4^4/4^2
(4^4/4^2)+4/4
4^4/4^2/4
4^4/4^2-4/4
256/16
4^3/4^2
4^4/4^2
4^2/4
4^5/4^3
4+4*4-4
4*4+4-4
4*4-4-4
4*4-(4-4)
4/4-(4-4)
4-4-(4-4)
4-4*(4-4)
4-4*(4-4)
4^4
156/15
156/16
256/16
4^3-4^2
4^3-4^2/4
60/16
60/32
60-4
56/16
56/4
4^3-4^2/4
4^4-4^2/4
252/16
252/32
4+4-4/4
4^2-4
4^2+4
(4^2+4)/5
(4^2+4)/4
(4^2+4)/4/4
(4^2+4)/(4/4)
(4^3+4)/(4/4)
(4^3+4)/(4-4)
(4^3+4)/(4/4)
(4^2+4)/(4/4)
(4^2-4)/(4/4)
(4-4)/(4/4)
4-4/(4/4)
4+4/(4/4)
4+4/(4*4)
4+4/4*4)
4+4/4*4
4/4/4*4
4/4/4/4
4/4/4*4
4/4*4*4
4-4*4*4
4+4*4
4^3+4^2*4
4^3+4^2/4
4^3+4^2/4/4
4^3+4^2/4^2/4
4^3+4^2/4^3/4
4^3+4^2*4^3/4
(4^3+4^2*4^3)/4
4-4*4-4
4-4+4-4
4-4+4*4
(4/4)+4*4
(4+4/4)*4
(4+4/4)+4
(4+4/4+4
(4+4/4+4)
(4-4/4+4)
(4-4^2/4+4)
(4-4^2)/(4+4)
(4^2-4)/(4+4)
(4^2-4)/(4/4)
(4^2-4)
(4^2-4)-4/4
4^2-4-4/4
4^3-4^2-4/4
4^3-4^2-4^2/4
4^3-4^2-4^2/4^2
4^3-4^2
48/16
48/32
64/32
4^3
4^3/4^2
4*4/4
4/4/4
4^5/4^2
4+4/4
4+4+4-4
4+4*4-4
4+4*(4-4)
4*4-(4/4)
4*4+(4/4)
4*4+(4/4)
4*4+(4+4)
4*4+(4+4)
4/4+(4+4)
4/4+4+4)
4/4+4+4
4/4*4+4
4/4*4-4
4/4*4/4
4/4+4/4
4/4+4*4
4/(4+4)*4
4/(4^3+4)*4
4^2/(4+4)*4
4^3/(4+4)*4
4^2/(4+4)*4
4^2/(4+4)*4^2
4/(4+4)*4^2
4/(4+4)/4^2
4/(4*4)/4^2
4-(4*4)/4^2
4-(4*4)
4(4*4)
4*4*4)
4*4*4
4*4/4
4*4-4
4-4^2
4^2-4
(4^2-4)-4^3/4^2
4^3/4^2
4^2-4^3/4^2
(4^2-4^3)/4^2
4^2-4^3/4^2
4^2-4^3/4^2-4^2
4^2-4^3/(4^2-4^2)
4^2-4^3/4^2+4^2
4^2-4^3/4^2+4^3
4^2-4^3/4^2+4
4^3/4^2+4
4^3/4^2
4^3/4
4^3/4-4
4^3/4-4+4
4^3/4-(4+4)
4^4/4-(4+4)
4^4/4^2
4+4-4*4
4*4-4/4
4+4+4
4+4+4^2
4+4^2+4^2
4^2+4^2+4^2
4^3+4^2+4^2
4^3+4^2
4^3+4^2/4+4
4^3+4^2/(4+4)
(4^3+4^2)/(4+4)
6/2(2+1)
6/2*(2+1)
6/(2*(2+1))
6/(2*2+2*1))
6/(2*2+2*1)
